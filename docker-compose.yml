version: "3"

volumes:
  postgres_storage:
  n8n_storage:
  redis_storage:

x-shared: &shared
  restart: always
  links:
    - redis
    - postgres
  volumes:
    - n8n_storage:/home/node/.n8n
  environment:
    - N8N_BASIC_AUTH_ACTIVE=true
    - N8N_BASIC_AUTH_USER
    - N8N_BASIC_AUTH_PASSWORD
    - N8N_PORT=5678
    - N8N_PROTOCOL=http
    # - N8N_HOST=localhost
    - NODE_ENV=dev
    # - WEBHOOK_URL=http://localhost/
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    - POSTGRES_DATABASE=${POSTGRES_DB}
    - POSTGRES_HOST=postgres
    - POSTGRES_PASSWORD
    - POSTGRES_PORT=5432
    - POSTGRES_USER
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_storage:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *shared
    image: n8nio/n8n:latest
    ports:
      - 5678:5678
    command: /bin/sh -c "n8n start --tunnel"

  n8n-worker:
    <<: *shared
    image: n8nio/n8n:latest
    deploy:
      mode: replicated
      replicas: 5
    command: /bin/sh -c "sleep 5; n8n worker"
    depends_on:
      - n8n
